# -*- coding: utf-8 -*-
"""EXPERIMENT1b NUMPY.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yRnyVbiD2IN4DflxHAaha3K5H5PNGZ3A

<h1><center>Experiment 1.B</center></h1> 

Date______________________-

Aim: To perform a review of python and matrix operations using Numpy programming

## Numpy

- Used for scientific computing
- Helps to create/ manage N-dimensional array
"""

import numpy as np #importing numpy package

x = np.array([1,2,3,4]) #creating numpy array from list

print(x)

print(type(x))

print(x.shape) #printing the dimensoin of the array

y = np.array([[1,2],[3,4]])

print(y)
print(y.shape)

z = np.array([[1+0.j,2+5.j]])  #printing thr dimension of the numpy array

print(z)
print(z.shape)

a = np.zeros((2,3)) #creating numpy array of zeros , of dimension (2,3)

print(a)

print(a.shape)

b = np.ones((2,3), dtype=int) #creating numpy array of ones , of dimension (2,3) and integer type

print(b)

d = np.eye(3) ## identity matrix

print(d)

e = np.arange(10) ##similar to Range function

print(e)

e = np.arange(12, 21)

print(e)

e = np.arange(5,20,3)

print(e)

f = np.linspace(1,20,7) ## It create intervals

print(f)

g = np.random.random((3,4))

print(g)

h = np.random.random((3,4)) #creating a numpy array having dimension (3,4) with random elements

print(h.reshape(2,2,3)) #reshaping the (3,4) array to (2,2,3)

x = np.arange(12)
print(x)
print(x[4])

print(x[-1])

x.resize(3,4)

print(x)

print(x[-1,-1])

print(x[2][3])

y = np.arange(1,26)
print(y)
print(y[:3])

print(y[10:])

print(y[10:15])

print(y[-5:])

print(y[3:-3])

print(y[::3])

print(y.reshape((5,5)))

y = y.reshape((5,5))
print(y)
print(y[:5,:5])

print(y[2:-1,1:-1])

print(y[:,:-1])

print(y[:,-1])

print(y[::,::2])

print(y)

print(y[1::2,1::2])

a = np.arange(1,6)
b = np.arange(6,11)
print(a+b)
print(a-b)
print(b-a)
print(a**2)

print(a>3)

a = np.arange(0,4).reshape((2,2))

b = np.eye(2)

print(a*b) ##Wrong

print(np.dot(a,b)) ##Matrix multiplication

x = np.arange(1,10).reshape(3,3)

print(x)

print(x.sum())

print(x.sum(axis=0))

print(x.sum(axis=1))

x = np.arange(1,19).reshape(3,3,2)

print(x.sum(axis=1))

x = np.arange(1,10).reshape(3,3)

print(x)
print(x.max())

print(x.max(axis=0))

print(x.transpose())