# -*- coding: utf-8 -*-
"""EXPERIMENT 1C MatplotLib (1).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12rgTK0eC8U0H_K19460lRuH7xka63KVi

<h1><center>Experiment 1C</center></h1>

Date________________-

AIM : To perform Data visualisation using Matplotlib
"""

# Commented out IPython magic to ensure Python compatibility.
from matplotlib import pyplot as plt
# %matplotlib inline

y = [5,3,4,5,6,7,2,8,9]
plt.plot(y)
plt.show()

x = [-5,-4,-3,-2,-1,0,1,2,3,4,5]
#y = [25,16,9,4,1,0,1,4,9,16,25]
y = [i**2 for i in x]
plt.plot(x,y)
plt.show()

import numpy as np
import math 

x = np.arange(-1,1.1,0.1).tolist()
y = [i**2 + 5 for i in x]
print(x)
print(y)

plt.plot(x,y)
plt.show()

import numpy as np
x = np.arange(0,10,0.1)
y = np.sin(x)

plt.plot(x,y)
plt.xlabel('angle')
plt.ylabel('sin')
plt.title('sin wave')
plt.show()

plt.scatter(x,y)
plt.xlabel('angle')
plt.ylabel('sin')
plt.title('sin wave')
plt.show()

plt.plot(x,y)
plt.scatter(x,y)
plt.xlabel('angle')
plt.ylabel('sin')
plt.title('sin wave')
plt.show()

plt.plot(x,np.sin(x), 'b+', label='sin')
plt.plot(x,np.cos(x) ,'y--', label='cos') #Scatter connections
plt.xlabel('angle')
plt.ylabel('sin/cos')
plt.title('sin/cos wave')
plt.ylim(-2,2)
plt.xlim(-5,15)
plt.legend()
plt.show()



"""## Subplot"""

fig, axis = plt.subplots(1,2, figsize=(10,5))

print(axis.shape)

fig, axis = plt.subplots(1,2, figsize=(15,5))
x = np.arange(0,10,0.1)
axis[0].plot(x,np.sin(x), 'g--')
axis[0].set_title('sin')
axis[0].set_xlabel('angle')
axis[0].set_ylabel('sin')
axis[1].plot(x,np.cos(x), 'r--')
axis[1].set_title('cos')
axis[1].set_xlabel('angle')
axis[1].set_ylabel('cos')
plt.show()

fig, axis = plt.subplots(2,2, figsize=(10,10))
x = np.arange(0,10,0.1)
axis[0][0].plot(x,np.sin(x), 'y--')
axis[0][0].set_title('sin')
axis[0][0].set_ylim(-3,3)
axis[0][1].plot(x,2*np.sin(x), 'g--')
axis[0][1].set_title('sin')
axis[0][1].set_ylim(-3,3)
axis[1][0].plot(x,np.cos(x), 'b--')
axis[1][0].set_title('cos')
axis[1][0].set_ylim(-3,3)
axis[1][1].plot(x,2*np.cos(x), 'r--')
axis[1][1].set_title('cos')
axis[1][1].set_ylim(-3,3)
plt.show()

x = np.random.random(100)*100
y = np.random.random(100)*100

plt.scatter(x,y)
plt.xlabel('price')
plt.ylabel('demand')
plt.title('stock')
plt.show()

x = np.array([1,2,3])
y = [98,85,100]
plt.bar(x,y)
plt.show()